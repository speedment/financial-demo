package com.extspeeder.example.financialdemo.financialdemo.db.piq.instrument.generated;

import com.extspeeder.example.financialdemo.financialdemo.db.piq.instrument.Instrument;
import com.speedment.plugin.extspeeder.runtime.FieldMapper;
import com.speedment.plugin.extspeeder.runtime.servlet.ExtSpeederHttpServlet;
import javax.annotation.Generated;
import static com.speedment.encoder.JsonEncoder.jsonValue;

/**
 * The generated servlet representing an entity (for example, a row) in the
 * Table financialdemo.db0.piq.instrument.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public class GeneratedInstrumentServlet extends ExtSpeederHttpServlet<Instrument> {
    
    private final static long serialVersionUID = 314569950;
    public static FieldMapper<Instrument> FIELD_MAPPER = columnName -> {
            switch (columnName) {
                case "id" : return Instrument.ID;
                case "industry" : return Instrument.INDUSTRY;
                case "name" : return Instrument.NAME;
                case "sector" : return Instrument.SECTOR;
                case "symbol" : return Instrument.SYMBOL;
                default : return null;
            }
    };
    
    @Override
    public Class<Instrument> entityClass() {
        return Instrument.class;
    }
    
    @Override
    public FieldMapper<Instrument> fieldMapper() {
        return FIELD_MAPPER;
    }
    
    @Override
    public String toJson(Instrument entity) {
        return entity == null ? "null" : new StringBuilder()
            .append('{')
            .append("\"id\":").append(jsonValue(entity.getId())).append(", ")
            .append("\"industry\":").append(jsonValue(entity.getIndustry())).append(", ")
            .append("\"name\":").append(jsonValue(entity.getName())).append(", ")
            .append("\"sector\":").append(jsonValue(entity.getSector())).append(", ")
            .append("\"symbol\":").append(jsonValue(entity.getSymbol()))
            .append('}')
        .toString();
    }
    
    @Override
    public String getServletInfo() {
        return "Servlet for the instrument table in the piq schema.";
    }
}