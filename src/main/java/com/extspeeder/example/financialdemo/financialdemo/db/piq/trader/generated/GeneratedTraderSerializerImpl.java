package com.extspeeder.example.financialdemo.financialdemo.db.piq.trader.generated;

import com.extspeeder.example.financialdemo.financialdemo.db.piq.trader.Trader;
import com.speedment.enterprise.offheapreadonlycache.entity.AbstractEntitySerializer;
import com.speedment.enterprise.offheapreadonlycache.internal.serializer.SerializerFactory;
import com.speedment.manager.Manager;
import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import javax.annotation.Generated;
import org.mapdb.Serializer;

/**
 * A {@link org.mapdb.Serializer} class for table {@link
 * com.speedment.config.db.Table} named trader.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Ext Speeder")
public class GeneratedTraderSerializerImpl extends AbstractEntitySerializer<Trader> {
    
    protected final static long serialVersionUID = -718157297;
    private final static Serializer<Long> ID_SERIALIZER = SerializerFactory.serializerOf(Long.class);
    private final static Serializer<Long> COHORT_ID_SERIALIZER = SerializerFactory.serializerOf(Long.class);
    private final static Serializer<String> NAME_SERIALIZER = SerializerFactory.serializerOf(String.class);
    
    public GeneratedTraderSerializerImpl(Manager<Trader> manager) {
        super(manager);
    }
    
    @Override
    public void serialize(final DataOutput out, final Trader trader) throws IOException {
        out.writeLong(trader.getId());
        out.writeLong(trader.getCohortId());
        out.writeUTF(trader.getName());
    }
    
    @Override
    public Trader deserialize(final DataInput in, final int available) throws IOException {
        final Trader trader = manager.newEmptyEntity();
        trader.setId(in.readLong());
        trader.setCohortId(in.readLong());
        trader.setName(in.readUTF());
        return trader;
    }
}