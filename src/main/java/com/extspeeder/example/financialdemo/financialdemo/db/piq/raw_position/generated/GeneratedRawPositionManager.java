package com.extspeeder.example.financialdemo.financialdemo.db.piq.raw_position.generated;

import com.extspeeder.example.financialdemo.financialdemo.db.piq.raw_position.RawPosition;
import com.extspeeder.example.financialdemo.financialdemo.db.piq.raw_position.RawPositionManager;
import com.speedment.component.ProjectComponent;
import com.speedment.config.db.Table;
import com.speedment.enterprise.offheapreadonlycache.manager.HasSerializer;
import com.speedment.internal.core.manager.sql.SqlManager;
import com.speedment.util.tuple.Tuple1;
import javax.annotation.Generated;
import org.mapdb.Serializer;

/**
 * The generated base manager representing an entity (for example, a row) in
 * the Table financialdemo.db0.piq.daily_position_performance.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedRawPositionManager extends HasSerializer<RawPosition>, SqlManager<RawPosition> {
    
    @Override
    default Serializer<RawPosition> newSerializer() {
        return new GeneratedRawPositionSerializerImpl(this);
    }
    
    @Override
    default Long primaryKeyFor(RawPosition entity) {
        return entity.getId();
    }
    
    @Override
    default Table getTable() {
        return speedment().get(ProjectComponent.class).getProject().findTableByName("db0.piq.daily_position_performance");
    }
    
    @Override
    default Class<RawPositionManager> getManagerClass() {
        return RawPositionManager.class;
    }
    
    @Override
    default Class<RawPosition> getEntityClass() {
        return RawPosition.class;
    }
    
    @Override
    Tuple1<Class<Long>> getPrimaryKeyClasses();
}