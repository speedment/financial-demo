package com.extspeeder.example.financialdemo.financialdemo.db.piq.raw_position.generated;

import com.extspeeder.example.financialdemo.financialdemo.db.piq.position_identifier.PositionIdentifier;
import com.extspeeder.example.financialdemo.financialdemo.db.piq.raw_position.RawPosition;
import com.speedment.Speedment;
import com.speedment.exception.SpeedmentException;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table financialdemo.db0.piq.daily_position_performance.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public abstract class GeneratedRawPositionImpl extends AbstractBaseEntity<RawPosition> implements RawPosition {
    
    private Long traderId;
    private String traderName;
    private String traderGroup;
    private String traderGroupType;
    private Long instrumentId;
    private String instrumentName;
    private String instrumentSymbol;
    private String instrumentSector;
    private String instrumentIndustry;
    private Integer startDate;
    private Integer endDate;
    private Long id;
    private Double pnl;
    private Long pid;
    private Double initiateTradingMktVal;
    private Double liquidateTradingMktVal;
    private Integer valueDate;
    
    protected GeneratedRawPositionImpl() {
        
    }
    
    @Override
    public PositionIdentifier findPid() {
        return managerOf_(PositionIdentifier.class).findAny(PositionIdentifier.ID, getPid())
            .orElseThrow(() -> new SpeedmentException(
                "Foreign key constraint error. PositionIdentifier is set to " + getPid()
                ));
            
    }
    
    @Override
    public Long getTraderId() {
        return traderId;
    }
    
    @Override
    public void setTraderId(Long traderId) {
        this.traderId = traderId;
    }
    
    @Override
    public String getTraderName() {
        return traderName;
    }
    
    @Override
    public void setTraderName(String traderName) {
        this.traderName = traderName;
    }
    
    @Override
    public String getTraderGroup() {
        return traderGroup;
    }
    
    @Override
    public void setTraderGroup(String traderGroup) {
        this.traderGroup = traderGroup;
    }
    
    @Override
    public String getTraderGroupType() {
        return traderGroupType;
    }
    
    @Override
    public void setTraderGroupType(String traderGroupType) {
        this.traderGroupType = traderGroupType;
    }
    
    @Override
    public Long getInstrumentId() {
        return instrumentId;
    }
    
    @Override
    public void setInstrumentId(Long instrumentId) {
        this.instrumentId = instrumentId;
    }
    
    @Override
    public Optional<String> getInstrumentName() {
        return Optional.ofNullable(instrumentName);
    }
    
    @Override
    public void setInstrumentName(String instrumentName) {
        this.instrumentName = instrumentName;
    }
    
    @Override
    public String getInstrumentSymbol() {
        return instrumentSymbol;
    }
    
    @Override
    public void setInstrumentSymbol(String instrumentSymbol) {
        this.instrumentSymbol = instrumentSymbol;
    }
    
    @Override
    public Optional<String> getInstrumentSector() {
        return Optional.ofNullable(instrumentSector);
    }
    
    @Override
    public void setInstrumentSector(String instrumentSector) {
        this.instrumentSector = instrumentSector;
    }
    
    @Override
    public Optional<String> getInstrumentIndustry() {
        return Optional.ofNullable(instrumentIndustry);
    }
    
    @Override
    public void setInstrumentIndustry(String instrumentIndustry) {
        this.instrumentIndustry = instrumentIndustry;
    }
    
    @Override
    public Optional<Integer> getStartDate() {
        return Optional.ofNullable(startDate);
    }
    
    @Override
    public void setStartDate(Integer startDate) {
        this.startDate = startDate;
    }
    
    @Override
    public Optional<Integer> getEndDate() {
        return Optional.ofNullable(endDate);
    }
    
    @Override
    public void setEndDate(Integer endDate) {
        this.endDate = endDate;
    }
    
    @Override
    public Long getId() {
        return id;
    }
    
    @Override
    public Double getPnl() {
        return pnl;
    }
    
    @Override
    public Long getPid() {
        return pid;
    }
    
    @Override
    public Double getInitiateTradingMktVal() {
        return initiateTradingMktVal;
    }
    
    @Override
    public Double getLiquidateTradingMktVal() {
        return liquidateTradingMktVal;
    }
    
    @Override
    public Integer getValueDate() {
        return valueDate;
    }
    
    @Override
    public final RawPosition setId(Long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final RawPosition setPnl(Double pnl) {
        this.pnl = pnl;
        return this;
    }
    
    @Override
    public final RawPosition setPid(Long pid) {
        this.pid = pid;
        return this;
    }
    
    @Override
    public final RawPosition setInitiateTradingMktVal(Double initiateTradingMktVal) {
        this.initiateTradingMktVal = initiateTradingMktVal;
        return this;
    }
    
    @Override
    public final RawPosition setLiquidateTradingMktVal(Double liquidateTradingMktVal) {
        this.liquidateTradingMktVal = liquidateTradingMktVal;
        return this;
    }
    
    @Override
    public final RawPosition setValueDate(Integer valueDate) {
        this.valueDate = valueDate;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("pnl = "+Objects.toString(getPnl()));
        sj.add("pid = "+Objects.toString(getPid()));
        sj.add("initiateTradingMktVal = "+Objects.toString(getInitiateTradingMktVal()));
        sj.add("liquidateTradingMktVal = "+Objects.toString(getLiquidateTradingMktVal()));
        sj.add("valueDate = "+Objects.toString(getValueDate()));
        return "RawPositionImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof RawPosition)) { return false; }
        final RawPosition thatRawPosition = (RawPosition)that;
        if (!Objects.equals(this.getId(), thatRawPosition.getId())) {return false; }
        if (!Objects.equals(this.getPnl(), thatRawPosition.getPnl())) {return false; }
        if (!Objects.equals(this.getPid(), thatRawPosition.getPid())) {return false; }
        if (!Objects.equals(this.getInitiateTradingMktVal(), thatRawPosition.getInitiateTradingMktVal())) {return false; }
        if (!Objects.equals(this.getLiquidateTradingMktVal(), thatRawPosition.getLiquidateTradingMktVal())) {return false; }
        if (!Objects.equals(this.getValueDate(), thatRawPosition.getValueDate())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getPnl());
        hash = 31 * hash + Objects.hashCode(getPid());
        hash = 31 * hash + Objects.hashCode(getInitiateTradingMktVal());
        hash = 31 * hash + Objects.hashCode(getLiquidateTradingMktVal());
        hash = 31 * hash + Objects.hashCode(getValueDate());
        return hash;
    }
    
    @Override
    public Class<RawPosition> entityClass() {
        return RawPosition.class;
    }
}