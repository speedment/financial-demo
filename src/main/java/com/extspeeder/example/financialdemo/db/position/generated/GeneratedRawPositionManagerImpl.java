package com.extspeeder.example.financialdemo.db.position.generated;

import com.extspeeder.example.financialdemo.db.position.RawPosition;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * The generated base implementation for the manager of every {@link
 * com.extspeeder.example.financialdemo.db.position.RawPosition} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedRawPositionManagerImpl extends AbstractManager<RawPosition> implements GeneratedRawPositionManager {
    
    private final TableIdentifier<RawPosition> tableIdentifier;
    
    protected GeneratedRawPositionManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("db0", "piq", "daily_position_performance");
    }
    
    @Override
    public TableIdentifier<RawPosition> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<RawPosition>> fields() {
        return Stream.of(
            RawPosition.ID,
            RawPosition.PNL,
            RawPosition.INITIATE_TRADING_MKT_VAL,
            RawPosition.LIQUIDATE_TRADING_MKT_VAL,
            RawPosition.VALUE_DATE,
            RawPosition.TRADER_NAME,
            RawPosition.TRADER_GROUP,
            RawPosition.TRADER_GROUP_TYPE,
            RawPosition.INSTRUMENT_NAME,
            RawPosition.INSTRUMENT_SYMBOL,
            RawPosition.INSTRUMENT_SECTOR,
            RawPosition.INSTRUMENT_INDUSTRY
        );
    }
    
    @Override
    public Stream<Field<RawPosition>> primaryKeyFields() {
        return Stream.of(
            RawPosition.ID
        );
    }
}